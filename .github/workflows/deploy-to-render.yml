# .github/workflows/deploy-to-render.yml
name: CI/CD to Render

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js & cache Yarn
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'yarn'

      - name: Install & Build
        run: |
          yarn install --frozen-lockfile
          yarn build

      # - name: Lint
      #   run: yarn lint

      # - name: Test
      #   run: yarn test -- --runInBand

      - name: Deploy to Render
        if: github.event_name == 'push'  
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          curl -X POST https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            -H "Accept: application/json"
              # Bump version, commit, push
              
      - name: Bump version
        if: github.event_name == 'push'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Bump patch version
          npm version patch -m "chore(release): bump version to %s"
          
          git push origin HEAD:master --follow-tags

      # Táº¡o release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Update version badge
      - name: Update version badge in README
        if: github.event_name == 'push'
        run: |
          VERSION=$(node -p "require('./package.json').version")
          BADGE_URL="https://img.shields.io/badge/version-${VERSION}-blue.svg"

          # Update README.md
          sed -i.bak -E "s|(<!-- VERSION BADGE -->).*|\1 ![version](${BADGE_URL})|" README.md

          # Commit update
          git add README.md
          git commit -m "chore: update version badge to ${VERSION}"
          git push origin HEAD:master
